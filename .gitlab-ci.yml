# 사용할 docker image를 지정해 줍니다.
image: node:latest
# stages 순서대로 pipeline이 형성됩니다.

stages:
  - build
  - deploy

# 이 전 작업과 동일한 내용인지를 확인해서 재사용 해주는 캐싱 메커니즘의 옵션입니다.
# build stage
build_app:
  image: node:alpine
  stage: build
  only:
    - master
  script:
    - npm install
    - npm run build
    - mkdir -p deploy
    - mv appspec.yml dist/appspec.yml
    - tar -zcvf myapp.tar.gz ./dist
    - mv myapp.tar.gz deploy/myapp.tar.gz
    - ls -al
    - pwd
  cache:
    paths:
      - node_modules/
  artifacts:
    paths:
      # build folder
      - dist/
      - deploy/
    expire_in: 1 hour

variables:
  S3_BUCKET_NAME: "vue-websocket-service"

deploy:
  # aws cli를 설치하기 위해서 python image를 사용합니다.
  image: python:latest
  stage: deploy
  script:
    - pip install awscli
    - ls -al
    - pwd
    - aws s3 cp deploy s3://$S3_BUCKET_NAME/myapp.tar.gz --recursive --include "*"
  # 해당 stage는 master branch에서만 실행 가능하도록 설정해 줍니다.
  only:
    - master
  # deploy는 테스트와 실제 배포의 경우가 있을 수 있습니다.
  # 이에 한 stage에서 여러 동작을 할 수 있도록 when: manual 을 넣어 줍니다.
  when: manual
